.版本 2
.支持库 HtmlView
.支持库 spec
.支持库 eImgConverter
.支持库 commobj
.支持库 shell
.支持库 EThread
.支持库 eAPI

.程序集 窗口程序集_启动窗口
.程序集变量 普通填表, 普通填表
.程序集变量 序列号, 文本型
.程序集变量 是否已就绪, 逻辑型
.程序集变量 图片对象, 对象
.程序集变量 设置_目录, 文本型
.程序集变量 设置_是否英文, 逻辑型
.程序集变量 读入设置, 文本型
.程序集变量 地址数组, 文本型, , "0"
.程序集变量 图片ID数组, 文本型, , "0"
.程序集变量 图片高度数组, 文本型, , "0"
.程序集变量 处理次数, 整数型
.程序集变量 已次数, 整数型
.程序集变量 上个地址, 文本型
.程序集变量 图片地址, 文本型
.程序集变量 下载地址列表, 文本型, , "0"
.程序集变量 第几张图, 整数型
.程序集变量 当前版本, 整数型, , , 全局版本号
.程序集变量 设置_网页加载超时, 整数型
.程序集变量 设置_图片加载超时, 整数型
.程序集变量 设置_循环处理频率, 整数型
.程序集变量 设置_是否非线程, 逻辑型
.程序集变量 设置_同名设置, 整数型
.程序集变量 IP_缓存地址, 文本型, , "0"
.程序集变量 IP_缓存位置, 文本型, , "0"
.程序集变量 IP_超时次数, 整数型
.程序集变量 当前列表位置, 整数型
.程序集变量 当前网站, 整数型
.程序集变量 是否跳过, 逻辑型

.子程序 开始下载
.局部变量 标题数组, 文本型, , "0"
.局部变量 图片网页地址, 文本型
.局部变量 图片数据, 字节集
.局部变量 图片文件名, 文本型
.局部变量 链接地址, 文本型
.局部变量 文件夹名, 文本型
.局部变量 同名次数, 整数型
.局部变量 图片文件名_纯文件名, 文本型
.局部变量 图片文件名_纯扩展名, 文本型
.局部变量 重试次数, 整数型
.局部变量 剪辑板内容, 文本型
.局部变量 添加位置, 整数型
.局部变量 初始化失败次数, 整数型
.局部变量 链接枚举失败次数, 整数型
.局部变量 是否加了序号, 逻辑型
.局部变量 最大重复, 整数型
.局部变量 全部数量, 整数型
.局部变量 当前数量, 整数型
.局部变量 是否已刷新地址, 整数型
.局部变量 是否GIF加载失败, 整数型
.局部变量 上次页数, 文本型
.局部变量 这次页数, 文本型
.局部变量 加载完成判断条件, 逻辑型
.局部变量 最近时间, 整数型, , "0", 用于判断平均时间
.局部变量 平均时间, 整数型, , , 用于判断剩余时间
.局部变量 全部时间, 整数型, , , 用于计算平均时间
.局部变量 当前时间, 长整数型, , , 用于计算当前单次耗时
.局部变量 临时已次数, 整数型

是否跳过 ＝ 假  ' 防止跳过
序列号 ＝ 文本_取出中间文本 (下载地址列表 [当前列表位置], “/g/”, “/”)
.判断开始 (取文本右边 (校验_取md5 (到字节集 (取文本左边 (下载地址列表 [当前列表位置], 23))), 10) ＝ “715b050676”)
    当前网站 ＝ 1
.判断 (取文本右边 (校验_取md5 (到字节集 (取文本左边 (下载地址列表 [当前列表位置], 23))), 10) ＝ “879cb3da4a”)
    当前网站 ＝ 2
    报错 (“提示：建议优先使用ex，e-只保证能用，有可能有小BUG”)
.默认
    当前网站 ＝ 0
.判断结束
超文本浏览框1.地址 ＝ 文本_替换 (下载地址列表 [当前列表位置], , , , 文本_取出中间文本 (下载地址列表 [当前列表位置] ＋ “\”, “?”, “\”), “”)  ' 去掉页码
' 返回 ()  ' 调试窗口大小时用
.如果真 (文件是否存在 (设置_目录 ＋ “raw.bmp”) ＝ 真 且 当前列表位置 ＝ 1)
    .如果 (取进程运行数量 (取执行文件名 ()) ＝ 1)
        报错 (“警告：检测到上次未正常关闭，若多次出现程序出错，请尝试在set.ini文件结尾中添加” ＋ #引号 ＋ “非线程启动” ＋ #引号 ＋ “后再打开软件”)
    .否则
        报错 (“错误：多开程序可能会导致列表保存读取或保存图片或网页下载服务不能正常运行”)
    .如果结束

.如果真结束
.如果真 (序列号 ＝ “”)
    报错 (“错误：画廊号获取失败,很可能无法继续下载”)
.如果真结束
处理次数 ＝ 0
.如果真 (超文本浏览框1.取窗口句柄 () ≤ 1)
    报错 (“错误：窗口句柄获取失败,很可能无法继续下载”)
.如果真结束
.循环判断首 ()
    清除数组 (地址数组)
    程序_延时 (设置_循环处理频率)
    .如果 (普通填表.初始化 (超文本浏览框1.取窗口句柄 ()))
        初始化失败次数 ＝ 0
    .否则
        .如果真 (是否已就绪 ＝ 真)
            初始化失败次数 ＝ 初始化失败次数 ＋ 1
            .如果真 (初始化失败次数 ≥ 20 且 初始化失败次数 ＜ 30)
                报错 (“错误：初始化连续失败” ＋ 到文本 (初始化失败次数) ＋ “次”)
            .如果真结束
            .如果真 (初始化失败次数 ＝ 30)
                报错 (“错误：初始化连续多次失败，若软件内已打开网页不能自动下载，请尝试在set.ini文件结尾中添加” ＋ #引号 ＋ “非线程启动” ＋ #引号 ＋ “后再使用软件”)
            .如果真结束

        .如果真结束

    .如果结束
    .如果 (普通填表.链接_枚举 (标题数组, 地址数组) ≠ 0)
        链接枚举失败次数 ＝ 0
    .否则
        .如果真 (是否已就绪 ＝ 真)
            链接枚举失败次数 ＝ 链接枚举失败次数 ＋ 1
            .如果真 (链接枚举失败次数 ≥ 20 且 链接枚举失败次数 ＜ 29)
                报错 (“错误：链接枚举连续失败” ＋ 到文本 (初始化失败次数) ＋ “次”)
            .如果真结束

        .如果真结束

    .如果结束
    .计次循环首 (取数组成员数 (地址数组), 已次数)
        .如果真 (快速取出现次数 (地址数组 [已次数] ＋ “?”, “/” ＋ 序列号 ＋ “-1?”) ≠ 0 或 快速取出现次数 (地址数组 [已次数] ＋ “/”, “/” ＋ 序列号 ＋ “-1/”) ≠ 0)
            调试输出 (标题数组 [已次数], 地址数组 [已次数])
            图片网页地址 ＝ 地址数组 [已次数]
        .如果真结束

    .计次循环尾 ()
    标签1.标题 ＝ “将在” ＋ 补0 (到文本 (四舍五入 (((设置_网页加载超时 ＋ 2000) ÷ 设置_循环处理频率 － 处理次数) ÷ (1000 ÷ 设置_循环处理频率), 1))) ＋ “s后刷新”
    处理次数 ＝ 处理次数 ＋ 1
    _启动窗口.标题 ＝ “Ex图片下载器v” ＋ 到文本 (当前版本 ÷ 10) ＋ “ @WGzeyu   画廊号：” ＋ 序列号 ＋ “ 获取到链接数量：” ＋ 到文本 (取数组成员数 (地址数组)) ＋ “ 处理次数：” ＋ 到文本 (处理次数)
    .如果真 (处理次数 ＞ 到整数 ((设置_网页加载超时 ＋ 2000) ÷ 设置_循环处理频率))
        普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
        普通填表.网页_刷新 ()
        报错 (“警告：详情页面打开失败，已刷新”)
        处理次数 ＝ 0
    .如果真结束

.循环判断尾 (图片网页地址 ＝ “”)
调试输出 (“成功”, 图片网页地址)
文件夹名 ＝ 源码取标题 (普通填表.网页_取源码 (), 设置_是否英文, 设置_目录)
全部数量 ＝ 源码取数量 (普通填表.网页_取源码 ())
' 编辑框1.内容 ＝ 普通填表.网页_取源码 ()  ' 调试用
.如果真 (全部数量 ＝ 0)
    报错 (“警告：获取总图片数量失败,无法显示进度”)
.如果真结束
调试输出 (文件夹名)
创建目录 (设置_目录 ＋ 文件夹名)
.如果真 (目录_是否存在 (设置_目录 ＋ 文件夹名) ＝ 假)
    文件夹名 ＝ 源码取标题 (普通填表.网页_取源码 (), 真, 设置_目录)
    创建目录 (设置_目录 ＋ 文件夹名)
.如果真结束
写到文件 (设置_目录 ＋ 文件夹名 ＋ “\” ＋ “url.txt”, 到字节集 (下载地址列表 [当前列表位置]))
_启动窗口.标题 ＝ “Ex图片下载器v” ＋ 到文本 (当前版本 ÷ 10) ＋ “ @WGzeyu   别点本软件内的网页,可在右下角控制刷新/查看图片服位置   https://github.com/wgzeyu/ExDownloader”
超文本浏览框1.跳转 (图片网页地址, , )
链接地址 ＝ 图片网页地址
.如果真 (设置_同名设置 ≥ 0 且 设置_同名设置 ≤ 2)
    添加位置 ＝ 设置_同名设置
    调试输出 (“添加位置”, 添加位置)
.如果真结束
重试次数 ＝ 0
.循环判断首 ()
    是否已就绪 ＝ 假
    当前时间 ＝ 到长整数 (时间_取现行时间戳 ())
    图片地址 ＝ “”
    获取下载地址 ()
    .如果真 (全部数量 ≠ 0 且 当前数量 ≥ 3)  ' 放开头防止影响到就绪判断状态，操作界面组件部分应该比计算的耗时要长
        标签3.标题 ＝ “剩” ＋ 毫秒数到自然语言 ((全部数量 － 当前数量) × 平均时间) ＋ “,均” ＋ 到文本 (四舍五入 (平均时间 ÷ 1000, 1)) ＋ “s”  ' 用字母表示防止超出范围
    .如果真结束
    .如果真 (处理次数 ≥ 到整数 (设置_网页加载超时 ÷ 设置_循环处理频率) 且 图片地址 ＝ “”)
        普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
        普通填表.网页_刷新 ()
        报错 (“警告：网页加载失败，已刷新”)
        上个地址 ＝ “”
        到循环尾 ()
        返回 ()
    .如果真结束
    图片文件名 ＝ 文本_取出中间文本 (文本_替换 (图片地址, 快速取出现次数 (图片地址, “/”) － 1, , , “/”, “”) ＋ “\”, “/”, “\”)
    图片文件名_纯文件名 ＝ 文本_取出中间文本 (“/” ＋ 图片文件名, “/”, “.”)
    图片文件名_纯扩展名 ＝ “.” ＋ 文本_取出中间文本 (图片文件名 ＋ “/”, “.”, “/”)
    同名次数 ＝ 0
    调试输出 (“获取图片文件名结束，判断重名开始”, 图片文件名)  ' 之前偶发会卡在这个调试之后，文件已存在这个调试之前，怀疑是线程执行信息框没有添加父窗口造成的，添加后测试三次暂未出现，应该解决了吧
    .如果真 (文件_是否存在 (设置_目录 ＋ 文件夹名 ＋ “\” ＋ 图片文件名) ＝ 真 或 是否加了序号 ＝ 真)
        这次页数 ＝ 文本_取出中间文本 (超文本浏览框1.地址 ＋ “?”, 序列号 ＋ “-”, “?”)
        .如果 (这次页数 ≠ 上次页数)
            .如果真 (添加位置 ＝ 0)  ' 1=前面，2=后面； 5、#是钮 6、#否钮
                进度条_状态 (2)
                .如果 (信息框 (“发现同名文件,请问是否将序号添加在文件名之前？” ＋ #换行符 ＋ “是 = 序号_文件名” ＋ #换行符 ＋ “否 = 文件名_序号”, 4, “发现同名文件”, _启动窗口) ＝ 5)
                    添加位置 ＝ 1
                    .如果真 (信息框 (“是否需要给之前已下载文件添加序号并固定序号？” ＋ #换行符 ＋ “固定序号表示例如在后续又出现没重名文件,也以上个序号命名”, 4, “发现同名文件”, _启动窗口) ＝ 5)
                        文件名前加序号0 (设置_目录 ＋ 文件夹名 ＋ “\”)
                        是否加了序号 ＝ 真
                    .如果真结束

                .否则
                    添加位置 ＝ 2
                .如果结束
                进度条_状态 (1)
            .如果真结束
            调试输出 (“文件名已存在，重命名”, 图片文件名, 图片文件名_纯文件名, 图片文件名_纯扩展名)
            .计次循环首 (100, 同名次数)
                .如果真 (同名次数 ＞ 最大重复)
                    最大重复 ＝ 同名次数
                .如果真结束
                .判断开始 (添加位置 ＝ 1)
                    .如果 (是否加了序号)
                        图片文件名 ＝ 到文本 (最大重复) ＋ “_” ＋ 图片文件名_纯文件名 ＋ 图片文件名_纯扩展名
                    .否则
                        图片文件名 ＝ 到文本 (同名次数) ＋ “_” ＋ 图片文件名_纯文件名 ＋ 图片文件名_纯扩展名
                    .如果结束

                .判断 (添加位置 ＝ 2)
                    图片文件名 ＝ 图片文件名_纯文件名 ＋ “_” ＋ 到文本 (同名次数) ＋ 图片文件名_纯扩展名
                .默认
                    ' 用判断方便以后添加其他重名后文件名样式
                .判断结束
                .如果真 (文件_是否存在 (设置_目录 ＋ 文件夹名 ＋ “\” ＋ 图片文件名) ＝ 假)
                    跳出循环 ()
                .如果真结束

            .计次循环尾 ()
        .否则
            报错 (“警告：触发重名检测后发现与上次图片地址相同”)
        .如果结束

    .如果真结束
    调试输出 (“判断重名结束”, 图片文件名, “获取到文件名”, 文件_是否存在 (设置_目录 ＋ 文件夹名 ＋ “\” ＋ 图片文件名), 设置_目录 ＋ 文件夹名 ＋ “\” ＋ 图片文件名)
    图片数据 ＝ 到字节集 (“”)
    处理次数 ＝ 0
    是否已刷新地址 ＝ 0
    是否GIF加载失败 ＝ 0
    .循环判断首 ()
        程序_延时 (设置_循环处理频率)
        ' 调试输出 (是否已就绪, 图片是否载入完成 (普通填表, 图片地址))  ' 测试可用，但突然想到，要是触发了自动换地址，那这个就不能判断是否载入完成了，还是先用获取就绪状态吧
        .如果 (当前网站 ＝ 1)  ' e-发现图片没加载完成也会触发已就绪，怀疑是广告框架加载完成触发的，反正我也不上这个懒得测了，临时加个这个应该就能用了，只是判断地址不符也许用不了
            加载完成判断条件 ＝ 真  ' ex直接跳过这个判断只用是否已就绪，更靠谱，能识别图片加载失败自动更换地址的情况
        .否则
            加载完成判断条件 ＝ 图片是否载入完成 (普通填表, 图片地址)
        .如果结束
        .如果真 (是否已就绪 ＝ 真 且 加载完成判断条件 ＝ 真)
            普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
            剪辑板内容 ＝ 取剪辑板文本 ()
            图片数据 ＝ 普通填表.网页_验证码同步 (图片地址, )  ' 找了半天貌似只能通过execCommand('copy')复制位图
            .如果真 (剪辑板内容 ≠ “”)
                置剪辑板文本 (剪辑板内容)  ' 因为上面通过execCommand('copy')获取位图，清空了剪辑版，所以这里备份再置剪辑版内容
            .如果真结束
            .如果真 (取字节集长度 (图片数据) ＝ 0 且 是否已刷新地址 ＞ 10)
                处理次数 ＝ 到整数 (设置_图片加载超时 ÷ 设置_循环处理频率)
                报错 (“警告：多次更新地址后依然获取不到图片，算作加载失败”)
            .如果真结束
            .如果真 (取字节集长度 (图片数据) ＝ 0 且 是否已刷新地址 ≤ 10)
                ' 普通填表.图片_取属性 (第几张图, 图片地址)  ' 无法判断第一张图，故废弃
                获取下载地址 ()
                .如果 (到小写 (取文本右边 (图片地址, 4)) ＝ “.gif”)
                    报错 (“警告：GIF显示失败，获取不到图片”)
                    调试输出 (图片地址)
                    是否GIF加载失败 ＝ 是否GIF加载失败 ＋ 1
                    .如果真 (是否GIF加载失败 ＞ 5)
                        跳出循环 ()
                    .如果真结束

                .否则
                    报错 (“警告：地址与图片不符，已更新地址”)
                    是否已刷新地址 ＝ 是否已刷新地址 ＋ 1
                .如果结束

            .如果真结束

        .如果真结束
        标签1.标题 ＝ “将在” ＋ 补0 (到文本 (四舍五入 ((设置_图片加载超时 ÷ 设置_循环处理频率 － 处理次数) ÷ (1000 ÷ 设置_循环处理频率), 1))) ＋ “s后重载”
        按钮1.标题 ＝ “立即重载”
        处理次数 ＝ 处理次数 ＋ 1
        .如果真 (重试次数 ≥ 2 且 到整数 (设置_图片加载超时 ÷ 设置_循环处理频率) ≥ 处理次数 且 取字节集长度 (图片数据) ＝ 0)
            处理次数 ＝ －到整数 (设置_图片加载超时 ÷ 设置_循环处理频率)  ' 由于已进行了一次超时的时间，到0就是到第二次超时才处理，再减超时时间次数就是等待图片超时时间×3
            调试输出 (处理次数)
            重试次数 ＝ 0
        .如果真结束

    .循环判断尾 (取字节集长度 (图片数据) ＝ 0 且 处理次数 ＜ 到整数 (设置_图片加载超时 ÷ 设置_循环处理频率))
    .如果真 (处理次数 ≥ 到整数 (设置_图片加载超时 ÷ 设置_循环处理频率) 且 取字节集长度 (图片数据) ＝ 0 且 是否GIF加载失败 ≤ 5)
        普通填表.链接_点击 (“Click here if the image fails loading”)
        报错 (“警告：图片加载失败，已换链接重新加载”)
        重试次数 ＝ 重试次数 ＋ 1
        到循环尾 ()
        返回 ()
    .如果真结束
    重试次数 ＝ 0
    调试输出 (取字节集长度 (图片数据))
    .如果 (是否GIF加载失败 ≤ 5)
        写到文件 (设置_目录 ＋ “raw.bmp”, 图片数据)
        转换到JPG (设置_目录 ＋ “raw.bmp”, 设置_目录 ＋ 文件夹名 ＋ “\” ＋ 图片文件名, 假, 85, 真, 0)  ' 最后只能重新压缩一次，设85不比原来小，仔细对比了半天看不出区别
    .否则
        报错 (“警告：获取不到GIF图片，本次不做保存”)
    .如果结束
    上次页数 ＝ 文本_取出中间文本 (超文本浏览框1.地址 ＋ “?”, 序列号 ＋ “-”, “?”)
    普通填表.初始化 (超文本浏览框1.取窗口句柄 ())  ' 怀疑可能是上方在进行某些操作后需要重新初始化，不然读取不到导致保存图片后没成功跳转到下页就重新获取内容了(猜测)
    普通填表.链接_取属性 (普通填表.链接_取索引 (“next”), , 链接地址)
    .如果真 (链接地址 ＝ “”)
        报错 (“警告：获取下一页链接失败”)
    .如果真结束
    处理次数 ＝ 0
    当前数量 ＝ 当前数量 ＋ 1
    .如果真 (全部数量 ≠ 0)
        进度条_进度 (当前数量, 全部数量)
    .如果真结束
    调试输出 (“循环”, 链接地址, 超文本浏览框1.地址)
    .如果真 (文本_取出中间文本 (链接地址 ＋ “?”, 序列号 ＋ “-”, “?”) ＝ 文本_取出中间文本 (超文本浏览框1.地址 ＋ “?”, 序列号 ＋ “-”, “?”))
        调试输出 (“通过页数相同识别到结束”)
        跳出循环 ()
    .如果真结束
    .如果真 (链接地址 ＝ 超文本浏览框1.地址)  ' 原来循环判断尾的判断条件移动到这
        调试输出 (“通过地址相同识别到结束”)
        跳出循环 ()
    .如果真结束
    .如果真 (是否跳过)
        报错 (“提示：已跳过当前任务”)
        跳出循环 ()
    .如果真结束
    超文本浏览框1.跳转 (链接地址, , )
    .如果 (取数组成员数 (最近时间) ≥ 10)
        .计次循环首 (取数组成员数 (最近时间) － 1, 临时已次数)
            最近时间 [临时已次数] ＝ 最近时间 [临时已次数 ＋ 1]
        .计次循环尾 ()
        最近时间 [取数组成员数 (最近时间)] ＝ 到整数 (到长整数 (时间_取现行时间戳 ()) － 当前时间)
    .否则
        加入成员 (最近时间, 到整数 (到长整数 (时间_取现行时间戳 ()) － 当前时间))
    .如果结束
    全部时间 ＝ 0
    .计次循环首 (取数组成员数 (最近时间), 临时已次数)
        全部时间 ＝ 全部时间 ＋ 最近时间 [临时已次数]
    .计次循环尾 ()
    平均时间 ＝ 四舍五入 (全部时间 ÷ 取数组成员数 (最近时间), 0)

.循环判断尾 (真)  ' 神tm出现了一次跳转速度太快直接判断下完了，于是把判断移动到跳转前了
.如果 (当前列表位置 ＝ 取数组成员数 (下载地址列表))
    调试输出 (“已全部保存”)
    删除文件 (设置_目录 ＋ “raw.bmp”)
    调试输出 (编辑框1.内容)
    保存列表 (真)
    结束 ()
.否则
    保存列表 ()
    当前列表位置 ＝ 当前列表位置 ＋ 1
    报错 (“提示：开始下载第” ＋ 到文本 (当前列表位置) ＋ “个任务，共” ＋ 到文本 (取数组成员数 (下载地址列表)) ＋ “个”)
    开始下载 ()  ' 反正列表数量不会特别特别多，应该不会有堆栈影响吧
.如果结束


.子程序 毫秒数到自然语言, 文本型
.参数 输入毫秒, 整数型
.局部变量 剩余秒数, 整数型
.局部变量 剩余分钟, 整数型
.局部变量 剩余小时, 整数型
.局部变量 可除次数, 整数型
.局部变量 输出文本, 文本型

剩余秒数 ＝ 四舍五入 (输入毫秒 ÷ 1000, 0)
.如果真 (剩余秒数 ≥ 60)
    可除次数 ＝ 到整数 (剩余秒数 ÷ 60)
    剩余秒数 ＝ 剩余秒数 － 60 × 可除次数
    剩余分钟 ＝ 剩余分钟 ＋ 可除次数
.如果真结束
.如果真 (剩余分钟 ≥ 60)
    可除次数 ＝ 到整数 (剩余分钟 ÷ 60)
    剩余分钟 ＝ 剩余分钟 － 60 × 可除次数
    剩余小时 ＝ 剩余小时 ＋ 可除次数
.如果真结束
.如果真 (剩余小时 ≠ 0)
    输出文本 ＝ 输出文本 ＋ 到文本 (剩余小时) ＋ “h”
.如果真结束
.如果真 (剩余分钟 ≠ 0)
    输出文本 ＝ 输出文本 ＋ 补一个0 (剩余分钟) ＋ “m”
.如果真结束
.如果真 (剩余秒数 ≠ 0)
    输出文本 ＝ 输出文本 ＋ 补一个0 (剩余秒数) ＋ “s”
.如果真结束
返回 (输出文本)

.子程序 补一个0, 文本型
.参数 输入整数, 整数型
.局部变量 文本整数, 文本型

.如果真 (取文本长度 (到文本 (输入整数)) ＝ 1)
    返回 (“0” ＋ 到文本 (输入整数))
.如果真结束
返回 (到文本 (输入整数))

.子程序 文件名前加序号0
.参数 输入目录, 文本型
.局部变量 全文件数组, 文本型, , "0"
.局部变量 已次数的, 整数型

文件_枚举 (输入目录, “*.*”, 全文件数组, 假)
.计次循环首 (取数组成员数 (全文件数组), 已次数的)
    文件_改名 (输入目录 ＋ 全文件数组 [已次数的], 输入目录 ＋ “0_” ＋ 全文件数组 [已次数的])
.计次循环尾 ()

.子程序 报错
.参数 信息, 文本型

调试输出 (信息)
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 5) ＋ “ ” ＋ 信息)
编辑框1.可视 ＝ 真
写到文件 (取运行目录 () ＋ “\log.txt”, 到字节集 (编辑框1.内容))
' 置剪辑板文本 (编辑框1.内容)

.子程序 获取下载地址, , , 需要多次调用，临时改的，以后在优化吧

调试输出 (是否已就绪, “就绪状态”)
处理次数 ＝ 0
.循环判断首 ()
    清除数组 (地址数组)
    清除数组 (图片高度数组)
    清除数组 (图片ID数组)  ' 怀疑在加载过程中如果只加载到图片部分标签导致数组数量可能不同，改到循环内清空
    程序_延时 (设置_循环处理频率)
    普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
    普通填表.图片_枚举 (地址数组, , 图片高度数组, , 图片ID数组, )
    .计次循环首 (取数组成员数 (地址数组), 已次数)
        .如果真 (图片ID数组 [已次数] ＝ “img” 且 到整数 (图片高度数组 [已次数]) ＞ 150)
            调试输出 (图片高度数组 [已次数], “取出图片”)
            .如果真 (地址数组 [已次数] ≠ 上个地址)
                调试输出 (地址数组 [已次数], 图片高度数组 [已次数], 图片ID数组 [已次数])
                图片地址 ＝ 地址数组 [已次数]
                上个地址 ＝ 图片地址
                第几张图 ＝ 已次数
            .如果真结束

        .如果真结束

    .计次循环尾 ()
    标签1.标题 ＝ “将在” ＋ 补0 (到文本 (四舍五入 ((设置_网页加载超时 ÷ 设置_循环处理频率 － 处理次数) ÷ (1000 ÷ 设置_循环处理频率), 1))) ＋ “s后刷新”
    按钮1.标题 ＝ “立即刷新”
    处理次数 ＝ 处理次数 ＋ 1
.循环判断尾 (图片地址 ＝ “” 且 处理次数 ＜ 到整数 (设置_网页加载超时 ÷ 设置_循环处理频率))
标签2.标题 ＝ 查询IP位置 (网页_取域名 (图片地址))

.子程序 源码取标题, 文本型
.参数 源码, 文本型
.参数 是否强制英文, 逻辑型, 可空
.参数 所在目录, 文本型, , 判断目录若存在文件夹则自动更名
.局部变量 文件夹, 文本型
.局部变量 存在几个, 整数型

.如果真 (是否强制英文 ＝ 假)
    文件夹 ＝ 文本_取出中间文本 (源码, “<H1 id=gj>”, “</H1>”, , )
.如果真结束
.如果真 (文件夹 ＝ “”)
    文件夹 ＝ 文本_取出中间文本 (源码, “<H1 id=gn>”, “</H1>”, , )
    .如果真 (文件夹 ＝ “”)
        文件夹 ＝ 文本_取出中间文本 (源码, “<TITLE>”, “ - E”, , )
    .如果真结束

.如果真结束
文件夹 ＝ 文本_替换 (文件夹, , , , “/”, “ ”, “\”, “ ”, “*”, “ ”, “|”, “ ”, #引号, “ ”)
文件夹 ＝ 文本_替换 (文件夹, , , , “?”, “ ”, “<”, “ ”, “>”, “ ”, “:”, “ ”)
' 文件夹 ＝ 编码_Unicode到Ansi (编码_Ansi到Unicode (文件夹))  ' 去除Unicode字符 更新：后来发现是替换?起作用
.如果真 (目录_是否存在 (所在目录 ＋ 文件夹))
    .计次循环首 (100, 存在几个)
        .如果真 (目录_是否存在 (所在目录 ＋ 文件夹 ＋ “ (” ＋ 到文本 (存在几个) ＋ “)”) ＝ 假)
            跳出循环 ()
        .如果真结束

    .计次循环尾 ()
.如果真结束
.如果真 (存在几个 ≠ 0)
    文件夹 ＝ 文件夹 ＋ “ (” ＋ 到文本 (存在几个) ＋ “)”
.如果真结束
返回 (文件夹)

.子程序 源码取数量, 整数型
.参数 输入源码, 文本型

返回 (到整数 (文本_取出中间文本 (输入源码, “ of ”, “ images”, , )))

.子程序 快速取出现次数, 整数型
.参数 全部文本, 文本型
.参数 要找的文本, 文本型
.局部变量 全部内容, 快速文本对象

全部内容.置文本 (全部文本)
返回 (全部内容.替换子文本 (要找的文本, “”, , , 真))

.子程序 __启动窗口_创建完毕
.局部变量 读入列表, 文本型

当前版本 ＝ 39
_启动窗口.标题 ＝ “Ex图片下载器v” ＋ 到文本 (当前版本 ÷ 10) ＋ “ @WGzeyu   https://github.com/wgzeyu/ExDownloader”
' 下载地址列表 ＝ 分割文本 (取剪辑板文本 (), #换行符, )
加入列表文本 (取剪辑板文本 (), 真)
读入列表 ＝ 到文本 (读入文件 (取运行目录 () ＋ “\list.txt”))
.如果真 (读入列表 ≠ “”)
    加入列表文本 (读入列表)
.如果真结束
当前列表位置 ＝ 1
.如果真 (文件是否存在 (取运行目录 () ＋ “\set.ini”) ＝ 假)
    写到文件 (取运行目录 () ＋ “\set.ini”, 到字节集 (文本_替换 (#设置模板, , , , “%directory%”, 取运行目录 ())))
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“首次使用需将cookies和下载目录填写到set.ini” ＋ #换行符 ＋ “【注意】若不填Cookies将出现熊猫无法使用！” ＋ #换行符 ＋ “【注意】若Cookies填错将出现熊猫无法使用！” ＋ #换行符 ＋ “【注意】不填Cookies或填错相当于没有登录！”, 0, , )
    .否则
        信息框 (“For the first time you need to fill in cookies and download the directory to fill in set.ini”, 0, , )
    .如果结束
    执行 (1, 取运行目录 () ＋ “\set.ini”, , , 2)
    结束 ()
.如果真结束
读入设置 ＝ 到文本 (读入文件 (取运行目录 () ＋ “\set.ini”))
设置_目录 ＝ 文本_取出中间文本 (读入设置, “<directory>”, “</directory>”)
设置_循环处理频率 ＝ 100  ' 每次等待的时间
设置_网页加载超时 ＝ 到整数 (文本_取出中间文本 (读入设置, “<WebTimeOut>”, “</WebTimeOut>”))
.如果真 (设置_网页加载超时 ＜ 2000)
    设置_网页加载超时 ＝ 10000
.如果真结束
设置_图片加载超时 ＝ 到整数 (文本_取出中间文本 (读入设置, “<ImgTimeOut>”, “</ImgTimeOut>”))
.如果真 (设置_图片加载超时 ＜ 3000)
    设置_网页加载超时 ＝ 20000
.如果真结束
.如果真 (快速取出现次数 (读入设置, “<ImgTimeOut>”) ＝ 0)
    写到文件 (取运行目录 () ＋ “\set.ini”, 到字节集 (读入设置 ＋ #换行符 ＋ “<WebTimeOut>” ＋ 文本_取出中间文本 (#设置模板 ＋ “<结束>”, “<WebTimeOut>”, “<结束>”)))
    调试输出 (“更新设置文件”)
.如果真结束
调试输出 (设置_循环处理频率, 设置_网页加载超时, 设置_图片加载超时)
设置_同名设置 ＝ 到整数 (文本_取出中间文本 (读入设置, “<Re-nameSet>”, “</Re-nameSet>”))
.如果真 (快速取出现次数 (读入设置, “<Re-nameSet>”) ＝ 0)
    写到文件 (取运行目录 () ＋ “\set.ini”, 到字节集 (读入设置 ＋ #换行符 ＋ “<Re-nameSet>” ＋ 文本_取出中间文本 (#设置模板 ＋ “<结束>”, “<Re-nameSet>”, “<结束>”)))
.如果真结束
.如果真 (快速取出现次数 (读入设置, “非线程启动”) ≠ 0)
    设置_是否非线程 ＝ 真
    报错 (“提示：当前为非线程启动，性能不如线程方式，右下角按钮可能会有时候无法点击。”)
.如果真结束
.如果真 (取文本右边 (设置_目录, 1) ≠ “\”)
    设置_目录 ＝ 设置_目录 ＋ “\”
.如果真结束
.判断开始 (取数组成员数 (下载地址列表) ＝ 0)
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“使用时需先复制Ex网址再打开本软件”, 0, “EX图片下载器v” ＋ 到文本 (当前版本 ÷ 10), )
    .否则
        信息框 (“Use the need to copy the ex URL and then open the software”, 0, , )
    .如果结束
    结束 ()
.判断 (取文本右边 (校验_取md5 (到字节集 (取文本左边 (下载地址列表 [1], 23))), 10) ≠ “715b050676” 且 取文本右边 (校验_取md5 (到字节集 (取文本左边 (下载地址列表 [1], 23))), 10) ≠ “879cb3da4a”)
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“使用时需先复制Ex网址再打开本软件”, 0, “EX图片下载器v” ＋ 到文本 (当前版本 ÷ 10), )
    .否则
        信息框 (“Use the need to copy the ex URL and then open the software”, 0, , )
    .如果结束
    结束 ()
.默认

.判断结束
.如果真 (取系统语言 () ＝ 2)
    设置_是否英文 ＝ 真
.如果真结束
.如果真 (快速取出现次数 (文本_取出中间文本 (读入设置, “<cookies>”, “</cookies>”), “ipb_pass_hash=”) ＝ 0)
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“Cookies可能填写不正确，请正确填写Cookies，否则相当于没有登录。”, 0, , )
    .否则
        信息框 (“Cookies have been detected may fill out incorrectly, please fill out the Cookies correctly, otherwise the equivalent of no login.”, 0, , )
    .如果结束
    执行 (1, 取运行目录 () ＋ “\set.ini”, , , 2)
    结束 ()
.如果真结束
网页_置Cookie1 (网页_取域名 (下载地址列表 [1]), 文本_取出中间文本 (读入设置, “<cookies>”, “</cookies>”))
进度条_初始化 (_启动窗口.取窗口句柄 ())
.如果真 (设置_是否非线程 ＝ 假)
    启动线程 (&开始下载, , )
.如果真结束
启动线程 (&更新检测, , )
服务器1.端口 ＝ 15650

.子程序 _超文本浏览框1_已就绪

调试输出 (“访问已就绪”)
是否已就绪 ＝ 真

.子程序 补0, 文本型
.参数 传入数值, 文本型
.局部变量 处理数值, 文本型

处理数值 ＝ 传入数值
.如果真 (到小数 (处理数值) ＜ 10)
    处理数值 ＝ “0” ＋ 处理数值
.如果真结束
.如果真 (快速取出现次数 (处理数值, “.”) ＝ 0)
    返回 (处理数值 ＋ “.0”)
.如果真结束
返回 (处理数值)

.子程序 更新检测
.局部变量 访问结果, 文本型
.局部变量 循环次数, 整数型
.局部变量 读取版本, 整数型
.局部变量 更新内容, 文本型
.局部变量 已次数, 整数型
.局部变量 使用服务器, 文本型

.计次循环首 (4, 循环次数)
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.gtxcn.com/ExDownloader/updatecheck.php”, 1, “ver=” ＋ 到文本 (当前版本), , , , , , , , , 5 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.gtxcn.com[加密,日本VPS+CloudFlare,只取新版内容]”  ' 使用PHP防止被cloudflare缓存,第一时间读取到更新,并且只输出比当前版本新的版本号,加载更快
    .如果真 (访问结果 ≠ “”)  ' 1默认使用带HTTPS的个人服务器读取更新
        跳出循环 ()
    .如果真结束
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.github.io/ExDownloader/updatecheck.txt”, 0, , , , , , , , , , 6 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.github.io[加密,GitHubIO]”
    .如果真 (访问结果 ≠ “”)  ' 2其次使用带HTTPS的GitHub读取更新
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (访问结果 ＝ “”)
    调试输出 (“检测更新失败”)
    返回 ()
.如果真结束
调试输出 (访问结果)
读取版本 ＝ 到整数 (文本_取出中间文本 (访问结果, “<ver>”, “</ver>”))
调试输出 (“本地版本号：” ＋ 到文本 (当前版本) ＋ “ 在线版本号：” ＋ 到文本 (读取版本) ＋ “ 使用服务器：” ＋ 使用服务器)
.如果真 (读取版本 ＞ 当前版本)
    更新内容 ＝ “Ex图片下载器v” ＋ 到文本 (当前版本 ÷ 10) ＋ “→v” ＋ 到文本 (读取版本 ÷ 10) ＋ “更新记录：” ＋ #换行符
    .计次循环首 (读取版本 － 当前版本, 已次数)
        .如果真 (文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ≠ “”)
            更新内容 ＝ 更新内容 ＋ 文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ＋ #换行符
        .如果真结束

    .计次循环尾 ()
    .如果真 (信息框 (文本_取出中间文本 (访问结果, “<txt>”, “</txt>”) ＋ #换行符 ＋ #换行符 ＋ 更新内容 ＋ #换行符 ＋ “是否更新？”, 36, “发现新版本”, ) ＝ 5)
        网页_打开指定网址 (文本_取出中间文本 (访问结果, “<url>”, “</url>”))
    .如果真结束

.如果真结束


.子程序 __启动窗口_尺寸被改变

超文本浏览框1.宽度 ＝ _启动窗口.宽度 － 7
超文本浏览框1.高度 ＝ _启动窗口.高度 － 29
分组框1.顶边 ＝ _启动窗口.高度 － 分组框1.高度 － 38
分组框1.左边 ＝ _启动窗口.宽度 － 分组框1.宽度 － 16
编辑框1.顶边 ＝ _启动窗口.高度 － 编辑框1.高度 － 38

.子程序 _按钮1_被单击

处理次数 ＝ 到整数 (设置_图片加载超时 ÷ 设置_循环处理频率)

.子程序 _按钮2_被单击

处理次数 ＝ 处理次数 － 到整数 (设置_图片加载超时 ÷ 设置_循环处理频率)

.子程序 图片是否载入完成, 逻辑型
.参数 输入普通填表, 普通填表
.参数 索引_地址_ID_title, 文本型
.局部变量 临时图片对象, 对象

临时图片对象 ＝ 输入普通填表.图片_取对象 (索引_地址_ID_title)
返回 (临时图片对象.读逻辑属性 (“complete”, ))

.子程序 __启动窗口_首次激活

.如果真 (设置_是否非线程 ＝ 真)
    开始下载 ()
.如果真结束


.子程序 取进程运行数量, 整数型
.参数 进程文件名称, 文本型
.局部变量 进程, 进程信息, , "0"
.局部变量 内已次数, 整数型
.局部变量 进程数量, 整数型

进程 ＝ 取系统进程列表 ()
.计次循环首 (取数组成员数 (进程), 内已次数)
    .如果真 (进程 [内已次数].进程名称 ＝ 进程文件名称)
        进程数量 ＝ 进程数量 ＋ 1
    .如果真结束

.计次循环尾 ()
返回 (进程数量)

.子程序 __启动窗口_将被销毁

结束 ()

.子程序 查询IP位置, 文本型, , 带缓存，错误判断，多节点
.参数 IP, 文本型
.局部变量 访问结果, 文本型
.局部变量 开始时间, 长整数型
.局部变量 内已次数, 整数型

开始时间 ＝ 取启动时间 ()
.计次循环首 (取数组成员数 (IP_缓存地址), 内已次数)  ' 先读取缓存
    .如果真 (IP_缓存地址 [内已次数] ＝ IP)
        调试输出 (“【”, 取启动时间 () － 开始时间, “获取IP地址耗时毫秒】”)
        返回 (IP_缓存位置 [内已次数])
    .如果真结束

.计次循环尾 ()
.如果真 (IP_超时次数 ≥ 3)
    返回 (“暂停获取”)
.如果真结束
访问结果 ＝ IP查询_ipip (IP)
内已次数 ＝ 0
.判断循环首 (访问结果 ＝ “”)  ' 这破API随机返回403
    内已次数 ＝ 内已次数 ＋ 1
    .如果 (取启动时间 () － 开始时间 ＜ 3000)  ' 不到3秒就重试
        .判断开始 (内已次数 ＝ 1)  ' 第一次重试还是ipip
            访问结果 ＝ IP查询_ipip (IP)
        .判断 (内已次数 ＝ 2)  ' 第二次重试新浪
            访问结果 ＝ IP查询_sina (IP)
        .默认
            返回 (“获取失败重试也失败”)  ' 还失败就返回失败
        .判断结束

    .否则
        IP报错计次 ()
        返回 (“获取失败且超时”)
    .如果结束

.判断循环尾 ()
.如果真 (取文本长度 (访问结果) ≥ 8)
    加入成员 (IP_缓存地址, IP)
    加入成员 (IP_缓存位置, 访问结果)
.如果真结束
.如果真 (取启动时间 () － 开始时间 ≥ 3000)
    IP报错计次 ()
.如果真结束
调试输出 (“【”, 取启动时间 () － 开始时间, “获取IP地址耗时毫秒】”)
.如果真 (内已次数 ≠ 0)
    调试输出 (“【”, 内已次数, “】重试次数”)
.如果真结束
返回 (访问结果)

.子程序 IP查询_ipip, 文本型, , 使用ipip.net的免费API，每天可以查询1000次
.参数 IP, 文本型
.局部变量 访问结果, 文本型
.局部变量 返回状态, 整数型

访问结果 ＝ 编码_Utf8到Ansi (网页_访问_对象 (“http://freeapi.ipip.net/” ＋ IP, 0, , , , , , 返回状态, , , , 5))  ' UTF-8编码
访问结果 ＝ 文本_替换 (文本_取出中间文本 (访问结果, “[”, “]”), , , , “,”, “”, #引号, “”, “ ”, “”)
.如果真 (取文本长度 (访问结果) ≥ 4 且 返回状态 ＝ 200 且 取文本长度 (访问结果) ≤ 60)
    返回 (访问结果)
.如果真结束
返回 (“”)

.子程序 IP查询_sina, 文本型, , 使用新浪的免费API，没ipip.net详细
.参数 IP, 文本型, , 本来还想加个淘宝，结果总超时，解析还麻烦，就懒得做了
.局部变量 访问结果, 文本型
.局部变量 返回状态, 整数型

访问结果 ＝ 到文本 (网页_访问_对象 (“http://int.dpool.sina.com.cn/iplookup/iplookup.php?ip=” ＋ IP, 0, , , , , , 返回状态, , , , 5))  ' GBK编码
访问结果 ＝ 文本_替换 (访问结果, , , , “ ”, “”, “-”, “”, “1”, “”, #换行符, “”, 字符 (#Tab键), “”)
.如果真 (取文本长度 (访问结果) ≥ 4 且 返回状态 ＝ 200 且 取文本长度 (访问结果) ≤ 40)
    返回 (访问结果)
.如果真结束
返回 (“”)

.子程序 IP报错计次

IP_超时次数 ＝ IP_超时次数 ＋ 1
.如果真 (IP_超时次数 ≥ 3)
    报错 (“警告：获取服务器位置信息耗时屡次超时,为确保下载速度不被影响已暂停获取服务器位置信息”)
.如果真结束


.子程序 _按钮3_被单击

加入列表文本 (取剪辑板文本 ())

.子程序 加入列表文本
.参数 输入文本, 文本型
.参数 是否隐藏, 逻辑型, 可空
.局部变量 整理文本, 文本型, , "0"
.局部变量 内已次数, 整数型
.局部变量 内内已次数, 整数型
.局部变量 是否有重复, 逻辑型
.局部变量 添加文本a, 文本型

调试输出 (“输入文本”, 输入文本)
添加文本a ＝ 输入文本
调试输出 (“添加文本”, 添加文本a)
.如果 (取文本右边 (校验_取md5 (到字节集 (取文本左边 (添加文本a, 23))), 10) ＝ “715b050676” 或 取文本右边 (校验_取md5 (到字节集 (取文本左边 (添加文本a, 23))), 10) ＝ “879cb3da4a”)
    整理文本 ＝ 分割文本 (添加文本a, #换行符, )
    .计次循环首 (取数组成员数 (整理文本), 内已次数)
        调试输出 (“整理文本”, 内已次数, 整理文本 [内已次数])
        是否有重复 ＝ 假
        .计次循环首 (取数组成员数 (下载地址列表), 内内已次数)
            调试输出 (文本_取出中间文本 (下载地址列表 [内内已次数], “/g/”, “/”), 文本_取出中间文本 (整理文本 [内已次数], “/g/”, “/”))
            .如果真 (文本_取出中间文本 (下载地址列表 [内内已次数], “/g/”, “/”) ＝ 文本_取出中间文本 (整理文本 [内已次数], “/g/”, “/”))
                是否有重复 ＝ 真
            .如果真结束

        .计次循环尾 ()
        .如果 (是否有重复 ＝ 假)
            调试输出 (“加入整理文本”, 内已次数, 整理文本 [内已次数])
            加入成员 (下载地址列表, 整理文本 [内已次数])
            .如果真 (是否隐藏 ＝ 假)
                报错 (“提示：已添加” ＋ 到文本 (取数组成员数 (整理文本)) ＋ “个地址到列表中，下载完成后会按列表继续下载，列表中已有” ＋ 到文本 (取数组成员数 (下载地址列表)) ＋ “个任务，当前已下载到第” ＋ 到文本 (当前列表位置) ＋ “个”)
            .如果真结束

        .否则
            .如果真 (是否隐藏 ＝ 假)
                报错 (“警告：请不要添加重复任务”)
            .如果真结束

        .如果结束

    .计次循环尾 ()
.否则
    .如果真 (是否隐藏 ＝ 假)
        报错 (“警告：请先复制Ex网址再点添加到列表按钮”)
    .如果真结束

.如果结束
.如果真 (是否隐藏 ＝ 假)
    保存列表 ()
.如果真结束


.子程序 保存列表
.参数 是否保存空列表, 逻辑型, 可空
.局部变量 当前文本, 文本型
.局部变量 内已次数, 整数型

.如果真 (是否保存空列表)
    写到文件 (取运行目录 () ＋ “\list.txt”, 到字节集 (“”))
    返回 ()
.如果真结束
调试输出 (取数组成员数 (下载地址列表), 当前列表位置, “数量”)
.计次循环首 (取数组成员数 (下载地址列表) － 当前列表位置, 内已次数)
    调试输出 (当前文本)
    当前文本 ＝ 当前文本 ＋ 下载地址列表 [当前列表位置 ＋ 内已次数] ＋ #换行符
.计次循环尾 ()
调试输出 (“保存列表”, 当前文本)
写到文件 (取运行目录 () ＋ “\list.txt”, 到字节集 (当前文本))

.子程序 _服务器1_数据到达

.如果真 (文本_取出中间文本 (“?” ＋ 服务器1.取回客户 (), “?”, “:”) ＝ “127.0.0.1”)  ' 仅接受本机添加
    加入列表文本 (到文本 (服务器1.取回数据 ()))
.如果真结束


.子程序 新_延时, , , 有时间试试如果程序延时导致服务器运行不正常就换这个
.参数 延时时间, 整数型, , 单位毫秒
.局部变量 已延时时间, 整数型
.局部变量 开始时间, 长整数型

开始时间 ＝ 到长整数 (时间_取现行时间戳 ())
.判断循环首 (到长整数 (时间_取现行时间戳 ()) － 开始时间 ＞ 延时时间)
    .如果 (到长整数 (时间_取现行时间戳 ()) － 开始时间 － 延时时间 ＞ 100)
        延时 (50)
    .否则
        延时 (1)
    .如果结束
    处理事件 ()
.判断循环尾 ()

.子程序 _按钮4_被单击

是否跳过 ＝ 真
报错 (“提示：当前文件下载完成后会跳过当前任务”)
