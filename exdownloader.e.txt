.版本 2
.支持库 HtmlView
.支持库 spec
.支持库 eImgConverter
.支持库 commobj
.支持库 shell
.支持库 EThread

.程序集 窗口程序集_启动窗口
.程序集变量 普通填表, 普通填表
.程序集变量 序列号, 文本型
.程序集变量 是否已就绪, 逻辑型
.程序集变量 图片对象, 对象
.程序集变量 设置_目录, 文本型
.程序集变量 设置_是否英文, 逻辑型
.程序集变量 读入设置, 文本型
.程序集变量 地址数组, 文本型, , "0"
.程序集变量 图片ID数组, 文本型, , "0"
.程序集变量 图片高度数组, 文本型, , "0"
.程序集变量 处理次数, 整数型
.程序集变量 已次数, 整数型
.程序集变量 上个地址, 文本型
.程序集变量 图片地址, 文本型
.程序集变量 下载地址, 文本型
.程序集变量 第几张图, 整数型
.程序集变量 当前版本, 整数型, , , 全局版本号

.子程序 _按钮1_被单击
.局部变量 标题数组, 文本型, , "0"
.局部变量 图片网页地址, 文本型
.局部变量 图片数据, 字节集
.局部变量 图片文件名, 文本型
.局部变量 链接地址, 文本型
.局部变量 文件夹名, 文本型

序列号 ＝ 文本_取出中间文本 (下载地址, “/g/”, “/”)
下载地址 ＝ 文本_替换 (下载地址, , , , 文本_取出中间文本 (下载地址 ＋ “\”, “?”, “\”), “”)  ' 去掉页码
超文本浏览框1.地址 ＝ 下载地址
处理次数 ＝ 0
.循环判断首 ()
    程序_延时 (100)
    调试输出 (“开始执行”)
    普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
    普通填表.链接_枚举 (标题数组, 地址数组)
    .计次循环首 (取数组成员数 (标题数组), 已次数)
        .如果真 (标题数组 [已次数] ＝ “”)
            .如果真 (取文本右边 (地址数组 [已次数], 取文本长度 (序列号) ＋ 2) ＝ 序列号 ＋ “-1”)
                调试输出 (标题数组 [已次数], 地址数组 [已次数])
                图片网页地址 ＝ 地址数组 [已次数]
            .如果真结束

        .如果真结束

    .计次循环尾 ()
    处理次数 ＝ 处理次数 ＋ 1
    .如果真 (处理次数 ＞ 100)
        超文本浏览框1.跳转 (下载地址, , )
        调试输出 (“详情页面打开失败，重新打开”)
        处理次数 ＝ 0
    .如果真结束

.循环判断尾 (图片网页地址 ＝ “”)
调试输出 (“成功”, 图片网页地址)
文件夹名 ＝ 源码取标题 (普通填表.网页_取源码 (), 设置_是否英文)
调试输出 (文件夹名)
创建目录 (设置_目录 ＋ 文件夹名)
.如果真 (目录_是否存在 (设置_目录 ＋ 文件夹名) ＝ 假)
    文件夹名 ＝ 源码取标题 (普通填表.网页_取源码 (), 真)
    创建目录 (设置_目录 ＋ 文件夹名)
.如果真结束
超文本浏览框1.跳转 (图片网页地址, , )
链接地址 ＝ 图片网页地址
.循环判断首 ()
    是否已就绪 ＝ 假
    图片地址 ＝ “”
    获取下载地址 ()
    .如果真 (处理次数 ≥ 100 且 图片地址 ＝ “”)
        超文本浏览框1.地址 ＝ “”
        超文本浏览框1.跳转 (链接地址, , )
        调试输出 (“网页加载失败，刷新”)
        上个地址 ＝ “”
        到循环尾 ()
        返回 ()
    .如果真结束
    图片文件名 ＝ 文本_取出中间文本 (文本_替换 (图片地址, 快速取出现次数 (图片地址, “/”) － 1, , , “/”, “”) ＋ “\”, “/”, “\”)
    调试输出 (图片文件名, “获取到文件名”)
    图片数据 ＝ 到字节集 (“”)
    处理次数 ＝ 0
    .循环判断首 ()
        程序_延时 (100)
        .如果真 (是否已就绪 ＝ 真)
            普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
            图片数据 ＝ 普通填表.网页_验证码同步 (图片地址, )  ' 找了半天没找到能从超文本浏览框里获取图片文件的方法，都是只能获取位图，bmp。。。
            .如果真 (取字节集长度 (图片数据) ＝ 0)
                ' 普通填表.图片_取属性 (第几张图, 图片地址)  ' 无法判断第一张图，故废弃
                获取下载地址 ()
                调试输出 (“与实际图片不同，更新地址”)
            .如果真结束

        .如果真结束
        处理次数 ＝ 处理次数 ＋ 1
    .循环判断尾 (取字节集长度 (图片数据) ＝ 0 且 处理次数 ＜ 200)
    .如果真 (处理次数 ≥ 200 且 取字节集长度 (图片数据) ＝ 0)
        普通填表.链接_点击 (“Click here if the image fails loading”)
        调试输出 (“图片加载失败，点击重新加载链接”)
        到循环尾 ()
        返回 ()
    .如果真结束
    调试输出 (取字节集长度 (图片数据))
    写到文件 (设置_目录 ＋ “raw.bmp”, 图片数据)
    转换到JPG (设置_目录 ＋ “raw.bmp”, 设置_目录 ＋ 文件夹名 ＋ “\” ＋ 图片文件名, 假, 85, 真, 0)  ' 最后只能重新压缩一次，设85不比原来小，仔细对比了半天看不出区别
    普通填表.链接_取属性 (普通填表.链接_取索引 (“next”), , 链接地址)
    超文本浏览框1.跳转 (链接地址, , )
    处理次数 ＝ 0
    调试输出 (“循环”, 链接地址, 超文本浏览框1.地址)
    .如果真 (文本_取出中间文本 (链接地址 ＋ “?”, 序列号 ＋ “-”, “?”) ＝ 文本_取出中间文本 (超文本浏览框1.地址 ＋ “?”, 序列号 ＋ “-”, “?”))
        调试输出 (“通过页数相同识别到结束”)
        跳出循环 ()
    .如果真结束

.循环判断尾 (链接地址 ≠ 超文本浏览框1.地址 或 处理次数 ≠ 0)
调试输出 (“已全部保存”)
删除文件 (设置_目录 ＋ “raw.bmp”)
结束 ()

.子程序 获取下载地址, , , 需要多次调用，临时改的，以后在优化吧

清除数组 (地址数组)
清除数组 (图片高度数组)
清除数组 (图片ID数组)
调试输出 (是否已就绪, “就绪状态”)
处理次数 ＝ 0
.循环判断首 ()
    程序_延时 (100)
    普通填表.初始化 (超文本浏览框1.取窗口句柄 ())
    普通填表.图片_枚举 (地址数组, , 图片高度数组, , 图片ID数组, )
    .计次循环首 (取数组成员数 (地址数组), 已次数)
        .如果真 (图片ID数组 [已次数] ＝ “img” 且 到整数 (图片高度数组 [已次数]) ＞ 150)
            .如果真 (地址数组 [已次数] ≠ 上个地址)
                调试输出 (地址数组 [已次数], 图片高度数组 [已次数], 图片ID数组 [已次数])
                图片地址 ＝ 地址数组 [已次数]
                上个地址 ＝ 图片地址
                第几张图 ＝ 已次数
            .如果真结束

        .如果真结束

    .计次循环尾 ()
    处理次数 ＝ 处理次数 ＋ 1
.循环判断尾 (图片地址 ＝ “” 且 处理次数 ＜ 100)

.子程序 源码取标题, 文本型
.参数 源码, 文本型
.参数 是否强制英文, 逻辑型, 可空
.局部变量 文件夹, 文本型

.如果真 (是否强制英文 ＝ 假)
    文件夹 ＝ 文本_取出中间文本 (源码, “<H1 id=gj>”, “</H1>”, , )
.如果真结束
.如果真 (文件夹 ＝ “”)
    文件夹 ＝ 文本_取出中间文本 (源码, “<H1 id=gn>”, “</H1>”, , )
    .如果真 (文件夹 ＝ “”)
        文件夹 ＝ 文本_取出中间文本 (源码, “<TITLE>”, “ - Ex”, , )
    .如果真结束

.如果真结束
文件夹 ＝ 文本_替换 (文件夹, , , , “/”, “ ”, “\”, “ ”, “*”, “ ”, “|”, “ ”, #引号, “ ”)
文件夹 ＝ 文本_替换 (文件夹, , , , “?”, “ ”, “<”, “ ”, “>”, “ ”)
文件夹 ＝ 编码_Unicode到Ansi (编码_Ansi到Unicode (文件夹))  ' 去除Unicode字符
返回 (文件夹)

.子程序 快速取出现次数, 整数型
.参数 全部文本, 文本型
.参数 要找的文本, 文本型
.局部变量 全部内容, 快速文本对象

全部内容.置文本 (全部文本)
返回 (全部内容.替换子文本 (要找的文本, “”, , , 真))

.子程序 __启动窗口_创建完毕

当前版本 ＝ 15
_启动窗口.标题 ＝ “Ex图片下载器v” ＋ 到文本 (当前版本 ÷ 10) ＋ “ @WGzeyu   https://github.com/wgzeyu/ExDownloader”
下载地址 ＝ 取剪辑板文本 ()
.如果真 (文件是否存在 (取运行目录 () ＋ “\set.ini”) ＝ 假)
    写到文件 (取运行目录 () ＋ “\set.ini”, 到字节集 (文本_替换 (#设置模板, , , , “%directory%”, 取运行目录 ())))
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“首次使用需将cookies和下载目录填写到set.ini” ＋ #换行符 ＋ “【注意】若不填Cookies将出现熊猫无法使用！” ＋ #换行符 ＋ “【注意】若Cookies填错将出现熊猫无法使用！” ＋ #换行符 ＋ “【注意】不填Cookies或填错相当于没有登录！”, 0, , )
    .否则
        信息框 (“For the first time you need to fill in cookies and download the directory to fill in set.ini”, 0, , )
    .如果结束
    执行 (1, 取运行目录 () ＋ “\set.ini”, , , 2)
    结束 ()
.如果真结束
读入设置 ＝ 到文本 (读入文件 (取运行目录 () ＋ “\set.ini”))
设置_目录 ＝ 文本_取出中间文本 (读入设置, “<directory>”, “</directory>”)
.如果真 (取文本右边 (设置_目录, 1) ≠ “\”)
    设置_目录 ＝ 设置_目录 ＋ “\”
.如果真结束
.如果真 (取文本右边 (校验_取md5 (到字节集 (取文本左边 (下载地址, 23))), 10) ≠ “715b050676”)
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“使用时需先复制ex网址再打开本软件”, 0, , )
    .否则
        信息框 (“Use the need to copy the ex URL and then open the software”, 0, , )
    .如果结束
    结束 ()
.如果真结束
.如果真 (取系统语言 () ＝ 2)
    设置_是否英文 ＝ 真
.如果真结束
.如果真 (快速取出现次数 (文本_取出中间文本 (读入设置, “<cookies>”, “</cookies>”), “ipb_pass_hash=”) ＝ 0)
    .如果 (取系统语言 () ＝ 1 或 取系统语言 () ＝ 3)
        信息框 (“检测到Cookies可能填写不正确，请正确填写Cookies，否则相当于没有登录，可能会出现熊猫。”, 0, , )
    .否则
        信息框 (“Cookies have been detected may fill out incorrectly, please fill out the Cookies correctly, otherwise the equivalent of no login, may appear panda.”, 0, , )
    .如果结束

.如果真结束
网页_置Cookie1 (网页_取域名 (下载地址), 文本_取出中间文本 (读入设置, “<cookies>”, “</cookies>”))
启动线程 (&_按钮1_被单击, , )
启动线程 (&更新检测, , )

.子程序 _超文本浏览框1_已就绪

调试输出 (“访问已就绪”)
是否已就绪 ＝ 真

.子程序 更新检测
.局部变量 访问结果, 文本型
.局部变量 循环次数, 整数型
.局部变量 读取版本, 整数型
.局部变量 更新内容, 文本型
.局部变量 已次数, 整数型
.局部变量 使用服务器, 文本型

.计次循环首 (4, 循环次数)
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.gtxcn.com/ExDownloader/updatecheck.php”, 1, “ver=” ＋ 到文本 (当前版本), , , , , , , , , 5 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.gtxcn.com[加密,日本VPS+CloudFlare,只取新版内容]”  ' 使用PHP防止被cloudflare缓存,第一时间读取到更新,并且只输出比当前版本新的版本号,加载更快
    .如果真 (访问结果 ≠ “”)  ' 1默认使用带HTTPS的个人服务器读取更新
        跳出循环 ()
    .如果真结束
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.github.io/ExDownloader/updatecheck.txt”, 0, , , , , , , , , , 6 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.github.io[加密,GitHubIO]”
    .如果真 (访问结果 ≠ “”)  ' 2其次使用带HTTPS的GitHub读取更新
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (访问结果 ＝ “”)
    调试输出 (“检测更新失败”)
    返回 ()
.如果真结束
调试输出 (访问结果)
读取版本 ＝ 到整数 (文本_取出中间文本 (访问结果, “<ver>”, “</ver>”))
调试输出 (“本地版本号：” ＋ 到文本 (当前版本) ＋ “ 在线版本号：” ＋ 到文本 (读取版本) ＋ “ 使用服务器：” ＋ 使用服务器)
.如果真 (读取版本 ＞ 当前版本)
    更新内容 ＝ “Ex图片下载器v” ＋ 到文本 (当前版本 ÷ 10) ＋ “→v” ＋ 到文本 (读取版本 ÷ 10) ＋ “更新记录：” ＋ #换行符
    .计次循环首 (读取版本 － 当前版本, 已次数)
        .如果真 (文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ≠ “”)
            更新内容 ＝ 更新内容 ＋ 文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ＋ #换行符
        .如果真结束

    .计次循环尾 ()
    .如果真 (信息框 (文本_取出中间文本 (访问结果, “<txt>”, “</txt>”) ＋ #换行符 ＋ #换行符 ＋ 更新内容 ＋ #换行符 ＋ “是否更新？”, 36, “发现新版本”, ) ＝ 5)
        网页_打开指定网址 (文本_取出中间文本 (访问结果, “<url>”, “</url>”))
    .如果真结束

.如果真结束

